Here is your **overall full-stack project prompt** tailored for **Replit** to develop your company's **website and app**:

---

## 🛠️ Replit Prompt: Full-Stack Web & App Platform for “Build My Skillset”

### 📌 Project Title:

**Build My Skillset – E-Learning & Project Development Platform**

---

### 🧾 Project Description:

Create a **full-stack web application** (website + API backend) for **Build My Skillset**, an e-learning and project support company offering courses, internships, and real-world projects to students. This project includes user registration, course listings, internship applications, certificate verification, feedback forms, and contact queries — all backed by a database and hosted for free.

---

### 🔩 Core Features to Develop:

#### 🔐 User Account System:

* Sign Up / Login (for Course Learners and Interns)
* Role-based access (Admin/User)
* Password encryption
* Dashboard access for users

#### 📚 Courses Section:

* List of available courses with:

  * Title, Duration, Description, Level
  * Enroll button
* Store enrolled users in DB

#### 🧑‍🏫 Internships Section:

* Internship listings with:

  * Title, Description, Duration, Requirements
  * Apply button + resume upload (file path or link)
* Store applicants in DB

#### 🔧 Project Services Section:

* Real-time project offerings by tech stack
* Request button (send request with user info)

#### 🎓 Certificate Verification:

* Admin-generated certificates with unique ID
* Public form to enter Certificate ID
* Display: Course, Name, Issue Date, Status

#### 💬 Feedback Section:

* Submit course feedback with:

  * Rating, Review, Name
* Admin dashboard to moderate/display reviews

#### 📞 Contact Us Section:

* Form: Name, Email, Message
* Store data in DB
* Option to send email via SMTP or EmailJS (optional)

---

### 🗃️ Database Schema (SQLite or PostgreSQL):

#### Tables Required:

* `users(user_id, name, email, phone, password_hash, role)`
* `courses(course_id, title, description, duration, level)`
* `enrollments(enroll_id, user_id, course_id, date)`
* `internships(internship_id, title, description, duration)`
* `applications(app_id, user_id, internship_id, resume_link)`
* `certificates(cert_id, user_id, course_name, issue_date, cert_code)`
* `projects(project_id, title, stack, description)`
* `feedback(feedback_id, user_id, rating, message)`
* `queries(query_id, name, email, message)`

---

### 💻 Tech Stack on Replit:

* **Frontend**: HTML, CSS, Bootstrap, JavaScript (or Flask templates)
* **Backend**: Python Flask (REST API)
* **Database**: SQLite (or connect PostgreSQL via Render later)
* **Authentication**: Session-based or JWT
* **Deployment**: Replit Free Plan (public project link)

---

### 🚀 Instructions for Replit Setup:

1. **Create a Flask project** on Replit

2. Install required packages:

   ```
   pip install flask flask_sqlalchemy flask_cors
   ```

3. Setup folders:

   ```
   /static   → CSS, JS, Images
   /templates → HTML pages
   main.py   → Main Flask app
   database.db → SQLite file
   ```

4. Run `main.py` with a simple route:

   ```python
   from flask import Flask
   app = Flask(__name__)

   @app.route('/')
   def home():
       return "Welcome to Build My Skillset"
   ```

---

### ✅ Expected Outputs:

* Responsive web interface (for desktop/mobile)
* REST API endpoints for all forms
* SQLite or PostgreSQL backend with real-time data storage
* Mobile-friendly UI using Bootstrap
* QR sharable mobile app via Expo (optional)
* Deployment-ready full-stack education platform

---

Do you want me to **generate the initial Replit project** for you with file structure, Flask setup, and database models ready to go?
